<div class="max-w-3xl mx-auto bg-white p-6 shadow rounded">
  <h2 class="text-2xl font-bold mb-4">Create Form</h2>

  <form method="POST" action="/forms/create" onsubmit="prepareFields()">
    <!-- Title -->
    <input type="text" name="title" placeholder="Form Title"
      class="w-full border p-2 mb-3 rounded" required />

    <!-- Description -->
    <textarea name="description" placeholder="Description"
      class="w-full border p-2 mb-3 rounded"></textarea>

    <!-- Fields Section -->
    <h3 class="text-xl font-semibold mt-4 mb-2">Form Fields</h3>
    <div id="fieldsContainer" class="space-y-2 mb-4"></div>
    <input type="hidden" name="fields" id="fieldsInput">

    <!-- Add Field Form -->
    <div class="flex gap-2 mb-4">
      <input id="fieldLabel" type="text" placeholder="Field Label"
        class="flex-1 border p-2 rounded" />
      <select id="fieldType" class="border p-2 rounded">
        <option value="text">Text</option>
        <option value="email">Email</option>
        <option value="number">Number</option>
        <option value="date">Date</option>
      </select>
      <button type="button" onclick="addField()"
        class="bg-green-500 text-white px-4 py-2 rounded">
        + Add
      </button>
    </div>

    <!-- Submit -->
    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">
      Create Form
    </button>
  </form>
</div>

<script>
  const fields = [];

  function addField() {
    const label = document.getElementById("fieldLabel").value.trim();
    const type = document.getElementById("fieldType").value;

    if (!label) return alert("Field label required!");

    fields.push({ label, type, required: true });
    renderFields();

    document.getElementById("fieldLabel").value = "";
  }

  function renderFields() {
    const container = document.getElementById("fieldsContainer");
    container.innerHTML = "";

    fields.forEach((f, i) => {
      container.innerHTML += `
        <div class="flex justify-between items-center bg-gray-100 p-2 rounded">
          <span>${f.label} (${f.type})</span>
          <button type="button" onclick="removeField(${i})"
            class="text-red-600 hover:text-red-800">Remove</button>
        </div>
      `;
    });
  }

  function removeField(index) {
    fields.splice(index, 1);
    renderFields();
  }

  function prepareFields() {
    document.getElementById("fieldsInput").value = JSON.stringify(fields);
  }
</script>
